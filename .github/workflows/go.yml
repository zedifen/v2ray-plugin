# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g. v1.3.2)'
        required: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target_os: [windows, linux, darwin]
        target_arch: [amd64, amd64.v2, amd64.v3, amd64.v4, arm64]

    runs-on: ubuntu-latest

    env:
      GOOS: ${{ matrix.target_os }}
      GOARCH: ${{ matrix.target_arch }}
      CGO_ENABLED: 0
      RELEASE_VERSION: ${{ github.event.inputs.version }}

    permissions:
      contents: write

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Parsing Target Arch Version
        run: |
          if [[ "$GOARCH" == *"."* ]]; then
            echo       GOARCH=$(echo "$GOARCH" | cut -d. -f1) >> $GITHUB_ENV
            echo ARCH_VERSION=$(echo "$GOARCH" | cut -d. -f2) >> $GITHUB_ENV
          fi

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'

      - name: Build
        id: build
        run: |
          if [[ "$GOARCH" == "amd64" ]]; then export GOAMD64=${ARCH_VERSION}; fi
          echo "Target OS:   $GOOS"
          echo "Target arch: $GOARCH $ARCH_VERSION"
          mkdir build
          go build -v -trimpath -ldflags "-X 'main.VERSION=$RELEASE_VERSION' -s -w" -o build/v2ray-plugin

      - name: Rename Windows V2Ray
        if: matrix.target_os == 'windows'
        run: |
          mv build/v2ray-plugin build/v2ray-plugin.exe

      - name: Tar artifact
        id: targz
        run: |
          export ASSET_NAME="v2ray-plugin-$GOOS-${GOARCH}${ARCH_VERSION}-$RELEASE_VERSION"
          echo "Tar filename: $ASSET_NAME.tar.gz"
          cd build
          tar czvf ../$ASSET_NAME.tar.gz *
          cd ..
          echo "TARFILE_NAME=$ASSET_NAME.tar.gz" >> $GITHUB_OUTPUT
          echo "TARFILE_NAME=$ASSET_NAME.tar.gz" >> $GITHUB_ENV

      - name: Calculate SHA256 sum
        id: checksum
        run: |
          sha256sum $TARFILE_NAME > $TARFILE_NAME.sha256sum
          echo "SHA_256_SUM=$(awk '{print $1}' $TARFILE_NAME.sha256sum)" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          name: v2ray-plugin ${{ github.event.inputs.version }}
          tag_name: ${{ github.event.inputs.version }}
          append_body: |
            ${{ steps.targz.outputs.TARFILE_NAME }} ${{ steps.checksum.outputs.SHA_256_SUM }}
          files: |
            ${{ steps.targz.outputs.TARFILE_NAME }}
